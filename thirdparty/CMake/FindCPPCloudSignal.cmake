# - Try to find CPPCLOUDSIGNAL
#
# The following variables are optionally searched for defaults
#  CPPCLOUDSIGNAL_ROOT_DIR:            Base directory where all CPPCLOUDSIGNAL components are found
#
# The following are set after configuration is done: 
#  CPPCLOUDSIGNAL_FOUND
#  CPPCLOUDSIGNAL_INCLUDE_DIRS
#  CPPCLOUDSIGNAL_LIBRARIES
#  CPPCLOUDSIGNAL_BINS

include(FindPackageHandleStandardArgs)
set(CPPCLOUDSIGNAL_ROOT_DIR ${THIS_THIRDPARTY_PATH}/CPPCloudSignal)

if(WIN32)
  find_path(CPPCLOUDSIGNAL_INCLUDE_DIR ICPPCloudSignal.h HINTS ${CPPCLOUDSIGNAL_ROOT_DIR}/include)
else()
  message("CPPCLOUDSIGNAL NOT SUPPORT LINUX RIGHT NOW!!!")
endif()

if(WIN32)
  set(WINDOWS_PLATFORM win64)
  if (NOT "${CMAKE_GENERATOR_PLATFORM}" MATCHES "(Win64|IA64|x64)")
    set(WINDOWS_PLATFORM win32)
  endif()
endif()

if(WIN32)
  find_library(CPPCLOUDSIGNAL_LIBRARY CPPCloudSignal.lib PATHS ${CPPCLOUDSIGNAL_ROOT_DIR}/lib/${WINDOWS_PLATFORM})
  set(CPPCLOUDSIGNAL_BIN ${CPPCLOUDSIGNAL_ROOT_DIR}/bin/${WINDOWS_PLATFORM})
endif()

find_package_handle_standard_args(CPPCLOUDSIGNAL DEFAULT_MSG
  CPPCLOUDSIGNAL_INCLUDE_DIR CPPCLOUDSIGNAL_LIBRARY CPPCLOUDSIGNAL_BIN)

if(CPPCLOUDSIGNAL_FOUND)
  set(CPPCLOUDSIGNAL_INCLUDE_DIRS ${CPPCLOUDSIGNAL_INCLUDE_DIR})
  set(CPPCLOUDSIGNAL_LIBRARIES ${CPPCLOUDSIGNAL_LIBRARY})
  set(CPPCLOUDSIGNAL_BINS ${CPPCLOUDSIGNAL_BIN})
endif()

message("CPPCLOUDSIGNAL_FOUND = ${CPPCLOUDSIGNAL_FOUND}")